<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="20" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-28T10:21:21 CST" name="Surefire suite" finished-at="2025-04-28T10:21:21 CST" duration-ms="84">
    <groups>
      <group name="positive-tests">
        <method signature="BankAccountGroupTest.testValidDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" name="testValidDeposit" class="com.borkacle.bank.tests.BankAccountGroupTest"/>
        <method signature="BankAccountGroupTest.testValidWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" name="testValidWithdrawal" class="com.borkacle.bank.tests.BankAccountGroupTest"/>
        <method signature="BankAccountDataDrivenTest.testDepositWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" name="testDepositWithData" class="com.borkacle.bank.tests.BankAccountDataDrivenTest"/>
        <method signature="BankAccountDataDrivenTest.testWithdrawalWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" name="testWithdrawalWithData" class="com.borkacle.bank.tests.BankAccountDataDrivenTest"/>
      </group> <!-- positive-tests -->
      <group name="negative-tests">
        <method signature="BankAccountGroupTest.testInvalidDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" name="testInvalidDeposit" class="com.borkacle.bank.tests.BankAccountGroupTest"/>
        <method signature="BankAccountGroupTest.testInvalidWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" name="testInvalidWithdrawal" class="com.borkacle.bank.tests.BankAccountGroupTest"/>
      </group> <!-- negative-tests -->
    </groups>
    <test started-at="2025-04-28T10:21:21 CST" name="Surefire test" finished-at="2025-04-28T10:21:21 CST" duration-ms="84">
      <class name="com.borkacle.bank.tests.BankAccountTest">
        <test-method signature="testWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountTest@6646153]" started-at="2025-04-28T10:21:21 CST" name="testWithdrawal" finished-at="2025-04-28T10:21:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdrawal -->
        <test-method signature="testInitialBalance()[pri:0, instance:com.borkacle.bank.tests.BankAccountTest@6646153]" started-at="2025-04-28T10:21:21 CST" name="testInitialBalance" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialBalance -->
        <test-method signature="testDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountTest@6646153]" started-at="2025-04-28T10:21:21 CST" name="testDeposit" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeposit -->
      </class> <!-- com.borkacle.bank.tests.BankAccountTest -->
      <class name="com.borkacle.bank.tests.BankAccountDataDrivenTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDepositWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="testDepositWithData" data-provider="depositData" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[250.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDepositWithData -->
        <test-method signature="testDepositWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="testDepositWithData" data-provider="depositData" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[200.01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDepositWithData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDepositWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="testDepositWithData" data-provider="depositData" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDepositWithData -->
        <test-method signature="testWithdrawalWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="testWithdrawalWithData" data-provider="withdrawalData" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[150.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdrawalWithData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testWithdrawalWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="testWithdrawalWithData" data-provider="withdrawalData" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[199.99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdrawalWithData -->
        <test-method signature="testWithdrawalWithData(double,double)[pri:0, instance:com.borkacle.bank.tests.BankAccountDataDrivenTest@2890c451]" started-at="2025-04-28T10:21:21 CST" name="testWithdrawalWithData" data-provider="withdrawalData" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdrawalWithData -->
      </class> <!-- com.borkacle.bank.tests.BankAccountDataDrivenTest -->
      <class name="com.borkacle.bank.tests.BankAccountGroupTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="testInvalidDeposit" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Deposit must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Deposit must be positive
at com.borkacle.bank.BankAccount.deposit(BankAccount.java:11)
at com.borkacle.bank.tests.BankAccountGroupTest.testInvalidDeposit(BankAccountGroupTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDeposit -->
        <test-method signature="testInvalidWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="testInvalidWithdrawal" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Withdrawal must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Withdrawal must be positive
at com.borkacle.bank.BankAccount.withdraw(BankAccount.java:16)
at com.borkacle.bank.tests.BankAccountGroupTest.testInvalidWithdrawal(BankAccountGroupTest.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidWithdrawal -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="testValidDeposit" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidDeposit -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountGroupTest@6f3b5d16]" started-at="2025-04-28T10:21:21 CST" name="testValidWithdrawal" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidWithdrawal -->
      </class> <!-- com.borkacle.bank.tests.BankAccountGroupTest -->
      <class name="com.borkacle.bank.tests.BankAccountExceptionTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountExceptionTest@3b938003]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountExceptionTest@3b938003]" started-at="2025-04-28T10:21:21 CST" name="testNegativeWithdrawal" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Withdrawal must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Withdrawal must be positive
at com.borkacle.bank.BankAccount.withdraw(BankAccount.java:16)
at com.borkacle.bank.tests.BankAccountExceptionTest.testNegativeWithdrawal(BankAccountExceptionTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeWithdrawal -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountExceptionTest@3b938003]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNegativeDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountExceptionTest@3b938003]" started-at="2025-04-28T10:21:21 CST" name="testNegativeDeposit" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Deposit must be positive]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Deposit must be positive
at com.borkacle.bank.BankAccount.deposit(BankAccount.java:11)
at com.borkacle.bank.tests.BankAccountExceptionTest.testNegativeDeposit(BankAccountExceptionTest.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeDeposit -->
        <test-method signature="testInsufficientFunds()[pri:0, instance:com.borkacle.bank.tests.BankAccountExceptionTest@3b938003]" started-at="2025-04-28T10:21:21 CST" name="testInsufficientFunds" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Insufficient funds]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Insufficient funds
at com.borkacle.bank.BankAccount.withdraw(BankAccount.java:17)
at com.borkacle.bank.tests.BankAccountExceptionTest.testInsufficientFunds(BankAccountExceptionTest.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsufficientFunds -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountExceptionTest@3b938003]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.borkacle.bank.tests.BankAccountExceptionTest -->
      <class name="com.borkacle.bank.tests.BankAccountLifecycleTest">
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.borkacle.bank.tests.BankAccountLifecycleTest@78b1cc93]" started-at="2025-04-28T10:21:21 CST" name="tearDown" finished-at="2025-04-28T10:21:21 CST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountLifecycleTest@78b1cc93]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDepositInSharedAccount()[pri:0, instance:com.borkacle.bank.tests.BankAccountLifecycleTest@78b1cc93]" started-at="2025-04-28T10:21:21 CST" name="testDepositInSharedAccount" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDepositInSharedAccount -->
        <test-method signature="testWithdrawalFromSharedAccount()[pri:0, instance:com.borkacle.bank.tests.BankAccountLifecycleTest@78b1cc93]" started-at="2025-04-28T10:21:21 CST" name="testWithdrawalFromSharedAccount" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithdrawalFromSharedAccount -->
      </class> <!-- com.borkacle.bank.tests.BankAccountLifecycleTest -->
      <class name="com.borkacle.bank.tests.BankAccountDependencyTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.borkacle.bank.tests.BankAccountDependencyTest@55a561cf]" started-at="2025-04-28T10:21:21 CST" name="setUp" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDependentWithdrawal()[pri:0, instance:com.borkacle.bank.tests.BankAccountDependencyTest@55a561cf]" started-at="2025-04-28T10:21:21 CST" name="testDependentWithdrawal" finished-at="2025-04-28T10:21:21 CST" depends-on-methods="com.borkacle.bank.tests.BankAccountDependencyTest.testInitialDeposit" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDependentWithdrawal -->
        <test-method signature="testInitialDeposit()[pri:0, instance:com.borkacle.bank.tests.BankAccountDependencyTest@55a561cf]" started-at="2025-04-28T10:21:21 CST" name="testInitialDeposit" finished-at="2025-04-28T10:21:21 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialDeposit -->
      </class> <!-- com.borkacle.bank.tests.BankAccountDependencyTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
